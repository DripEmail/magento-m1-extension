<?xml version="1.0"?>
<config>
    <modules>
        <Drip_Connect>
            <version>1.7.3</version>
        </Drip_Connect>
    </modules>
    <global>
        <models>
            <drip_connect>
                <class>Drip_Connect_Model</class>
            </drip_connect>
        </models>
        <helpers>
            <drip_connect>
                <class>Drip_Connect_Helper</class>
            </drip_connect>
        </helpers>
        <blocks>
            <drip_connect>
                <class>Drip_Connect_Block</class>
            </drip_connect>
        </blocks>
        <resources>
            <drip_connect_setup>
                <setup>
                    <module>Drip_Connect</module>
                </setup>
            </drip_connect_setup>
        </resources>
        <events>
            <newsletter_subscriber_save_commit_after>
                <observers>
                    <drip_connect_newsletter_subscriber_save_commit_after>
                        <class>drip_connect/observer_customer_subscriberaftersave</class>
                        <method>execute</method>
                    </drip_connect_newsletter_subscriber_save_commit_after>
                </observers>
            </newsletter_subscriber_save_commit_after>
            <newsletter_subscriber_delete_commit_after>
                <observers>
                    <drip_connect_newsletter_subscriber_delete_commit_after>
                        <class>drip_connect/observer_account</class>
                        <method>afterSubscriberDelete</method>
                    </drip_connect_newsletter_subscriber_delete_commit_after>
                </observers>
            </newsletter_subscriber_delete_commit_after>
            <controller_action_predispatch_newsletter_subscriber_new>
                <observers>
                    <drip_connect_controller_action_predispatch_newsletter_subscriber_new>
                        <class>drip_connect/observer_account</class>
                        <method>newGuestSubscriberAttempt</method>
                    </drip_connect_controller_action_predispatch_newsletter_subscriber_new>
                </observers>
            </controller_action_predispatch_newsletter_subscriber_new>
            <controller_action_postdispatch_newsletter_subscriber_new>
                <observers>
                    <drip_connect_controller_action_postdispatch_newsletter_subscriber_new>
                        <class>drip_connect/observer_account</class>
                        <method>newGuestSubscriberCreated</method>
                    </drip_connect_controller_action_postdispatch_newsletter_subscriber_new>
                </observers>
            </controller_action_postdispatch_newsletter_subscriber_new>
            <controller_action_predispatch_newsletter_manage_save>
                <observers>
                    <drip_connect_controller_action_predispatch_newsletter_manage_save>
                        <class>drip_connect/observer_account</class>
                        <method>saveSubscriptionState</method>
                    </drip_connect_controller_action_predispatch_newsletter_manage_save>
                </observers>
            </controller_action_predispatch_newsletter_manage_save>
            <customer_save_before>
                <observers>
                    <drip_connect_customer_save_before>
                        <class>drip_connect/observer_account</class>
                        <method>beforeCustomerSave</method>
                    </drip_connect_customer_save_before>
                </observers>
            </customer_save_before>
            <customer_save_commit_after>
                <observers>
                    <drip_connect_customer_save_commit_after>
                        <class>drip_connect/observer_account</class>
                        <method>afterCustomerSave</method>
                    </drip_connect_customer_save_commit_after>
                </observers>
            </customer_save_commit_after>
            <customer_delete_commit_after>
                <observers>
                    <drip_connect_customer_delete_commit_after>
                        <class>drip_connect/observer_account</class>
                        <method>afterCustomerDelete</method>
                    </drip_connect_customer_delete_commit_after>
                </observers>
            </customer_delete_commit_after>
            <sales_order_save_before>
                <observers>
                    <drip_connect_sales_order_save_before>
                        <class>drip_connect/observer_order_beforesave</class>
                        <method>execute</method>
                    </drip_connect_sales_order_save_before>
                </observers>
            </sales_order_save_before>
            <sales_order_save_commit_after>
                <observers>
                    <drip_connect_sales_order_save_commit_after>
                        <class>drip_connect/observer_order_aftersave</class>
                        <method>execute</method>
                    </drip_connect_sales_order_save_commit_after>
                </observers>
            </sales_order_save_commit_after>
        </events>
    </global>
    <frontend>
        <events>
            <sales_quote_merge_before>
                <observers>
                    <drip_connect_sales_quote_merge_before>
                        <class>drip_connect/observer_quote</class>
                        <method>clearCartOnLogin</method>
                    </drip_connect_sales_quote_merge_before>
                </observers>
            </sales_quote_merge_before>
            <!--<customer_address_save_before>
                <observers>
                    <drip_connect_customer_address_save_before>
                        <type>singleton</type>
                        <class>drip_connect/observer_account</class>
                        <method>beforeCustomerAddressSaveFront</method>
                    </drip_connect_customer_address_save_before>
                </observers>
            </customer_address_save_before>
            <customer_address_save_commit_after>
                <observers>
                    <drip_connect_customer_address_save_commit_after>
                        <type>singleton</type>
                        <class>drip_connect/observer_account</class>
                        <method>afterCustomerAddressSaveFront</method>
                    </drip_connect_customer_address_save_commit_after>
                </observers>
            </customer_address_save_commit_after>-->
            <customer_login>
                <observers>
                    <drip_connect_customer_login>
                        <class>drip_connect/observer_customer</class>
                        <method>customerLogin</method>
                    </drip_connect_customer_login>
                </observers>
            </customer_login>
            <wishlist_add_product>
                <observers>
                    <wishlist_change_event>
                        <class>drip_connect/observer_wishlist</class>
                        <method>addProduct</method>
                    </wishlist_change_event>
                </observers>
            </wishlist_add_product>
            <controller_action_predispatch_wishlist_index_remove>
                <observers>
                    <drip_connect_wishlist_remove_product>
                        <class>drip_connect/observer_wishlist</class>
                        <method>removeProduct</method>
                    </drip_connect_wishlist_remove_product>
                </observers>
            </controller_action_predispatch_wishlist_index_remove>
            <controller_action_predispatch_wishlist_index_update>
                <observers>
                    <drip_connect_wishlist_update>
                        <class>drip_connect/observer_wishlist</class>
                        <method>removeProductsWithoutQuantity</method>
                    </drip_connect_wishlist_update>
                </observers>
            </controller_action_predispatch_wishlist_index_update>
            <sales_quote_save_before>
                <observers>
                    <drip_connect_sales_quote_save_before>
                        <class>drip_connect/observer_quote</class>
                        <method>beforeQuoteSaved</method>
                    </drip_connect_sales_quote_save_before>
                </observers>
            </sales_quote_save_before>
            <sales_quote_save_commit_after>
                <observers>
                    <drip_connect_sales_quote_save_commit_after>
                        <class>drip_connect/observer_quote</class>
                        <method>afterQuoteSaved</method>
                    </drip_connect_sales_quote_save_commit_after>
                </observers>
            </sales_quote_save_commit_after>
        </events>
        <layout>
            <updates>
                <drip_connect>
                    <file>drip/connect.xml</file>
                </drip_connect>
            </updates>
        </layout>
        <routers>
            <drip>
                <use>standard</use>
                <args>
                    <module>Drip_Connect</module>
                    <frontName>drip</frontName>
                </args>
            </drip>
        </routers>
    </frontend>
    <admin>
        <routers>
            <adminhtml>
                <args>
                    <modules>
                        <Drip_Connect after="Mage_Adminhtml">Drip_Connect_Adminhtml</Drip_Connect>
                    </modules>
                </args>
            </adminhtml>
        </routers>
    </admin>
    <adminhtml>
        <events>
            <catalog_product_save_before>
                <observers>
                    <drip_connect_catalog_product_save_before>
                        <class>drip_connect/observer_product</class>
                        <method>beforeSave</method>
                    </drip_connect_catalog_product_save_before>
                </observers>
            </catalog_product_save_before>
            <catalog_product_save_after>
                <observers>
                    <drip_connect_catalog_product_save_after>
                        <class>drip_connect/observer_product</class>
                        <method>afterSave</method>
                    </drip_connect_catalog_product_save_after>
                </observers>
            </catalog_product_save_after>
            <catalog_product_delete_after>
                <observers>
                    <drip_connect_catalog_product_delete_commit_after>
                        <class>drip_connect/observer_product</class>
                        <method>afterDelete</method>
                    </drip_connect_catalog_product_delete_commit_after>
                </observers>
            </catalog_product_delete_after>
        </events>
    </adminhtml>
    <default>
        <dripconnect_general>
            <module_settings>
                <is_enabled>0</is_enabled>
                <salt>some default string</salt>
            </module_settings>
            <api_settings>
                <url>https://api.getdrip.com/v2/</url>
                <timeout>30000</timeout>
                <batch_delay>72</batch_delay>
                <behavior>call_api</behavior>
                <memory_limit>4096M</memory_limit>
            </api_settings>
            <actions>
                <sync_customers_data_state>0</sync_customers_data_state>
                <sync_orders_data_state>0</sync_orders_data_state>
            </actions>
        </dripconnect_general>
    </default>
    <crontab>
        <jobs>
            <drip_connect_sync_customers>
                <schedule>
                    <cron_expr>*/5 * * * *</cron_expr>
                </schedule>
                <run>
                    <model>drip_connect/cron_customers::syncCustomers</model>
                </run>
            </drip_connect_sync_customers>
            <drip_connect_sync_orders>
                <schedule>
                    <cron_expr>*/5 * * * *</cron_expr>
                </schedule>
                <run>
                    <model>drip_connect/cron_orders::syncOrders</model>
                </run>
            </drip_connect_sync_orders>
        </jobs>
    </crontab>
</config>
