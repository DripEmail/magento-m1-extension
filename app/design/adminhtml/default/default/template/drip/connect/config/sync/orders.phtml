<?php
/**
 * @see Drip_Connect_Block_Adminhtml_System_Config_Sync_Orders
 */
?>
<script type="text/javascript">
//<![CDATA[
    function syncOrders() {

        var elem = $('<?php echo $this->getHtmlId() ?>');
        var res = $('sync_orders_state');

        elem.addClassName('disabled').setAttribute('disabled', 'disabled');

        params = {
            account_id: '<?=$this->getAccountId()?>',
        };

// TODO ajax should just set new state (queued) for 'dripconnect_general/actions/sync_customers_data_state' for current store
// cron will check this value for all stores, run required tasks and set flag to 'in progress'
        new Ajax.Request('<?php echo $this->getAjaxUrl() ?>', {
            parameters: params,
            onSuccess: function(response) {
                var result = '<?php echo Mage::helper('core')->jsQuoteEscape($this->__("Data's been sent to account")." ".$this->getAccountId()) ?>';
                response = response.responseText;
                if (response == 1) {
                    res.removeClassName('error');
                } else {
                    res.addClassName('error');
                    result = '<?php echo Mage::helper('core')->jsQuoteEscape($this->__('Data send error')) ?>';
                }
                res.update(result);
            },
            onFailure: function(){
                res.addClassName('error');
                result = '<?php echo Mage::helper('core')->jsQuoteEscape($this->__('Data send error')) ?>';
            },
            onComplete: function(){
                elem.removeClassName('disabled')
                    .removeAttribute('disabled');
            }
        });
    }
//]]>
</script>
<button onclick="javascript:syncOrders(); return false;" type="button" id="<?php echo $this->getHtmlId() ?>"
<?php if (!$this->isSyncAvailable()) { ?> disabled="disabled" class="disabled" <?php } else { ?> class="scalable" <?php }?>>
    <?php echo $this->escapeHtml($this->getButtonLabel()) ?>
</button> &nbsp; <b id="sync_orders_state"><?= Drip_Connect_Model_Source_SyncState::getLabel(Mage::getStoreConfig('dripconnect_general/actions/sync_orders_data_state', Mage::app()->getRequest()->getParam('store'))); ?></b>
